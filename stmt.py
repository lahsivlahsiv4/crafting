# Autogenerated file

from Token import Token
from expr import Expr
from typing import List

class StmtVisitor:
    def visit_block_stmt(self, stmt):
        raise NotImplementedError()
    def visit_expression_stmt(self, stmt):
        raise NotImplementedError()
    def visit_if_stmt(self, stmt):
        raise NotImplementedError()
    def visit_print_stmt(self, stmt):
        raise NotImplementedError()
    def visit_var_stmt(self, stmt):
        raise NotImplementedError()
    def visit_while_stmt(self, stmt):
        raise NotImplementedError()


class Stmt:
    def accept(self, visitor : StmtVisitor):
        raise NotImplementedError()

class Block(Stmt):
    statements : List[Stmt]

    def __init__(self, statements : List[Stmt]):
        self.statements = statements

    def accept(self, visitor : StmtVisitor):
        return visitor.visit_block_stmt(self)


class Expression(Stmt):
    expression : Expr

    def __init__(self, expression : Expr):
        self.expression = expression

    def accept(self, visitor : StmtVisitor):
        return visitor.visit_expression_stmt(self)


class If(Stmt):
    condition : Expr
    then_branch : Stmt
    else_branch : Stmt

    def __init__(self, condition : Expr, then_branch : Stmt, else_branch : Stmt):
        self.condition = condition
        self.then_branch = then_branch
        self.else_branch = else_branch

    def accept(self, visitor : StmtVisitor):
        return visitor.visit_if_stmt(self)


class Print(Stmt):
    expression : Expr

    def __init__(self, expression : Expr):
        self.expression = expression

    def accept(self, visitor : StmtVisitor):
        return visitor.visit_print_stmt(self)


class Var(Stmt):
    name : Token
    initializer : Expr

    def __init__(self, name : Token, initializer : Expr):
        self.name = name
        self.initializer = initializer

    def accept(self, visitor : StmtVisitor):
        return visitor.visit_var_stmt(self)


class While(Stmt):
    condition : Expr
    body : Stmt

    def __init__(self, condition : Expr, body : Stmt):
        self.condition = condition
        self.body = body

    def accept(self, visitor : StmtVisitor):
        return visitor.visit_while_stmt(self)


